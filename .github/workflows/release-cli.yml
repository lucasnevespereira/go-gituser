name: release-cli

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g. 1.5.0)"
        required: false

env:
  GORELEASER_VERSION: latest
  GO_VERSION: 1.24.3
  FORMULA_FILE: gituser.rb
  HOMEBREW_TAP_DIR: homebrew-tools
  GIT_AUTHOR_NAME: lucasnevespereira
  GIT_AUTHOR_EMAIL: pereiraneveslucas@gmail.com

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "${{ env.GO_VERSION }}"

      - name: Validate GoReleaser config
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: check

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ -z "${{ github.event.inputs.version }}" ]]; then
              echo "Version input required when triggering manually."
              exit 1
            fi
            echo "version=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          else
            TAG="${GITHUB_REF#refs/tags/}"
            VERSION="${TAG#v}"
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout Homebrew tap repo
        uses: actions/checkout@v4
        with:
          repository: lucasnevespereira/homebrew-tools
          token: ${{ secrets.BREW_TOKEN }}
          path: ${{ env.HOMEBREW_TAP_DIR }}

      - name: Update Homebrew formula and push
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          echo "Updating Homebrew formula to version $VERSION..."
          cd "${{ env.HOMEBREW_TAP_DIR }}"

          if [ ! -f "${{ env.FORMULA_FILE }}" ]; then
            echo "Formula file not found!"
            exit 1
          fi

          # Update version in formula
          sed -i.bak "s/^  version \".*\"/  version \"$VERSION\"/" "${{ env.FORMULA_FILE }}"

          # Update download URLs and SHA256s
          for PLATFORM in darwin_all linux_arm64 linux_amd64; do
            FILE="gituser_${VERSION}_${PLATFORM}.tar.gz"
            URL="https://github.com/lucasnevespereira/go-gituser/releases/download/v${VERSION}/${FILE}"
            SHA256=$(curl -sL "$URL" | shasum -a 256 | awk '{print $1}')

            case "$PLATFORM" in
              darwin_all)
                sed -i.bak "s|url \".*darwin_all\.tar\.gz\"|url \"$URL\"|" "${{ env.FORMULA_FILE }}"
                sed -i.bak "s|sha256 \".*\"|sha256 \"$SHA256\"|" "${{ env.FORMULA_FILE }}"
                ;;
              linux_arm64)
                sed -i.bak "s|url \".*linux_arm64\.tar\.gz\"|url \"$URL\"|" "${{ env.FORMULA_FILE }}"
                sed -i.bak "s|sha256 \".*\"|sha256 \"$SHA256\"|" "${{ env.FORMULA_FILE }}"
                ;;
              linux_amd64)
                sed -i.bak "s|url \".*linux_amd64\.tar\.gz\"|url \"$URL\"|" "${{ env.FORMULA_FILE }}"
                sed -i.bak "s|sha256 \".*\"|sha256 \"$SHA256\"|" "${{ env.FORMULA_FILE }}"
                ;;
            esac
          done

          rm *.bak

          git config user.name "${{ env.GIT_AUTHOR_NAME }}"
          git config user.email "${{ env.GIT_AUTHOR_EMAIL }}"
          git checkout -b bump-gituser-v${VERSION}
          git add "${{ env.FORMULA_FILE }}"
          git commit -m "chore(gituser): bump to v${VERSION}"
          git push origin bump-gituser-v${VERSION}
          git checkout main
          git merge bump-gituser-v${VERSION}
          git push origin main
